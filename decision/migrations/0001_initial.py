# Generated by Django 3.2 on 2021-07-05 03:11

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.CharField(max_length=60, unique=True, verbose_name='Логин')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='ФИО')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Админ')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('otdel', models.CharField(default='0', max_length=60, verbose_name='Отдел')),
                ('rayon', models.CharField(default='0', max_length=60, verbose_name='Район')),
                ('role', models.CharField(choices=[('Специалист отдела', 'Специалист отдела'), ('Руководитель отдела', 'Руководитель отдела'), ('Руководитель управления', 'Руководитель управления'), ('Контроль', 'Контроль')], default='специалист-отдела', max_length=30, verbose_name='Роль')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Article_cl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, verbose_name='Код статьи')),
                ('title', models.CharField(max_length=200, verbose_name='Название статьи')),
            ],
        ),
        migrations.CreateModel(
            name='Chrono',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ch_snils', models.CharField(max_length=100, verbose_name='Снилс')),
                ('add_time', models.CharField(default=datetime.datetime(2021, 7, 5, 12, 11, 2, 832030), max_length=50, verbose_name='Дата добавления')),
                ('user_login', models.CharField(max_length=100, verbose_name='Логин специалиста')),
                ('info', models.CharField(default='', max_length=200, verbose_name='Примечание')),
            ],
        ),
        migrations.CreateModel(
            name='CreateUlusOtdel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('on_or_off', models.BooleanField(blank=True, null=True, verbose_name='Создать улус и отделы')),
            ],
        ),
        migrations.CreateModel(
            name='Departament_cl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departament_title', models.CharField(max_length=100, verbose_name='Наименование отдела')),
                ('departament_code', models.CharField(max_length=100, unique=True, verbose_name='Код отдела')),
                ('director_poss', models.CharField(max_length=100, null=True, verbose_name='Должность руководителя')),
                ('director_fio', models.CharField(max_length=100, null=True, verbose_name='ФИО руководителя')),
            ],
        ),
        migrations.CreateModel(
            name='Distric_cl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distric_name', models.CharField(max_length=100, verbose_name='Наименование улуса')),
                ('distric_code', models.CharField(max_length=100, unique=True, verbose_name='Код улуса')),
            ],
        ),
        migrations.CreateModel(
            name='Pension_type_cl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Вид пенсии')),
                ('code', models.CharField(max_length=100, verbose_name='Код вида пенсии')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(default='00', max_length=100, verbose_name='Догин')),
                ('otdel_code', models.CharField(blank=True, default='00', max_length=10, verbose_name='Код отдела')),
                ('district', models.CharField(blank=True, max_length=10, verbose_name='Код улуса ')),
                ('role', models.CharField(choices=[('Специалист отдела', 'Специалист отдела'), ('Руководитель отдела', 'Руководитель отдела'), ('Руководитель управления', 'Руководитель управления'), ('Контроль', 'Контроль')], default='Специалист отдела', max_length=30, verbose_name='Роль')),
            ],
        ),
        migrations.CreateModel(
            name='Stats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otdel', models.CharField(max_length=10, verbose_name='Отдел')),
                ('quantity', models.CharField(default='0', max_length=10, verbose_name='Количество')),
                ('over_dec', models.CharField(default='0', max_length=10, verbose_name='Просроченные')),
                ('last_day', models.CharField(default='0', max_length=10, verbose_name='Последний день')),
                ('left_3_day', models.CharField(default='0', max_length=10, verbose_name='Осталось 3 дня')),
            ],
        ),
        migrations.CreateModel(
            name='Stats_ulus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ulus', models.CharField(max_length=10, verbose_name='Отдел')),
                ('quantity', models.CharField(default='0', max_length=10, verbose_name='Количество')),
                ('over_dec', models.CharField(default='0', max_length=10, verbose_name='Просроченные')),
                ('last_day', models.CharField(default='0', max_length=10, verbose_name='Последний день')),
                ('left_3_day', models.CharField(default='0', max_length=10, verbose_name='Осталось 3 дня')),
            ],
        ),
        migrations.CreateModel(
            name='Upfr_cl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_name', models.CharField(max_length=100, null=True, verbose_name='Наименование управления')),
                ('director_poss', models.CharField(max_length=100, null=True, verbose_name='Должность руководителя')),
                ('director_fio', models.CharField(max_length=100, null=True, verbose_name='ФИО руководителя')),
            ],
        ),
        migrations.CreateModel(
            name='Decision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dec_status', models.CharField(choices=[('Активный', 'Активный'), ('Завершенный', 'Завершенный')], default='', max_length=15, verbose_name='Состояние')),
                ('usr_departament_code', models.CharField(default='Auto', max_length=200, null=True, verbose_name='Код отдела')),
                ('usr_district_code', models.CharField(default='Auto', max_length=100, null=True, verbose_name='Код улуса')),
                ('snils', models.CharField(default='', max_length=16, verbose_name='Снилс')),
                ('fio', models.CharField(default='', max_length=100, verbose_name='ФИО')),
                ('appeal_date', models.DateField(verbose_name='Дата обращения')),
                ('statement_reg_num', models.CharField(max_length=100, verbose_name='Рег. номер заявления')),
                ('appeal_type', models.CharField(choices=[('назначение', 'назначение'), ('перерасчет', 'перерасчет'), ('перевод', 'перевод'), ('восстановление', 'восстановление'), ('возобновление', 'возобновление')], max_length=100, verbose_name='Вид обращения')),
                ('adress', models.CharField(max_length=200, verbose_name='Адрес')),
                ('note', models.CharField(blank=True, max_length=200, verbose_name='Примечание')),
                ('decision_date', models.DateField(verbose_name='Дата решения')),
                ('decision_number', models.CharField(default='Номер решения_1', max_length=30, verbose_name='Номер решения')),
                ('cause', models.CharField(choices=[('проведением проверки', 'проведением проверки'), ('непредставлением иными государственными органами в установленный срок', 'непредставлением иными государственными органами в установленный срок')], max_length=100, verbose_name='Причина')),
                ('user_fio', models.CharField(default='auto', max_length=100, verbose_name='ФИО специалиста')),
                ('recovery_time', models.DateField(blank=True, verbose_name='Срок восстановления')),
                ('decision_date_block3', models.DateField(blank=True, null=True, verbose_name='Дата решения востановления')),
                ('decision_number_2', models.CharField(default='Номер решения_2', max_length=30, verbose_name='Номер решения ')),
                ('cause_2', models.CharField(blank=True, choices=[('Завершение проверки', 'Завершение проверки'), ('Поступление ответ', 'Поступление ответ'), ('Истечение 3-х мес.срока', 'Истечение 3-х мес.срока')], max_length=100, null=True, verbose_name='Причина, Востановления срока')),
                ('add_time', models.CharField(default=datetime.datetime(2021, 7, 5, 12, 11, 2, 832030), max_length=50, verbose_name='Дата добавления')),
                ('actual_term', models.CharField(default='0', max_length=20, verbose_name='Cрок обработки обращения')),
                ('law', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='decision.article_cl', verbose_name='Статья закона')),
                ('types_of_pension', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='decision.pension_type_cl', verbose_name='Виды пенсий')),
            ],
        ),
        migrations.CreateModel(
            name='Art_and_Pens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appeal_type', models.CharField(choices=[('назначение', 'назначение'), ('перерасчет', 'перерасчет'), ('перевод', 'перевод'), ('восстановление', 'восстановление'), ('возобновление', 'возобновление')], max_length=100, verbose_name='Вид обращения')),
                ('ground_for_suspension', models.CharField(choices=[('частью 8 статьи 22 Федерального закона от 28.12.2013 № 400-ФЗ "О страховых пенсиях"', 'частью 8 статьи 22 Федерального закона от 28.12.2013 № 400-ФЗ "О страховых пенсиях"'), ('частью 7 статьи 23 Федерального закона от 28.12.2013 № 400-ФЗ "О страховых пенсиях"', 'частью 7 статьи 23 Федерального закона от 28.12.2013 № 400-ФЗ "О страховых пенсиях"'), ('частью 6 статьи 10 Федерального закона от 28.12.2013 № 424-ФЗ "О накопительной пенсии"', 'частью 6 статьи 10 Федерального закона от 28.12.2013 № 424-ФЗ "О накопительной пенсии"'), ('пунктом 4 статьи 24 Федерального закона от 15.12.2001 № 166-ФЗ "О государственном пенсионном обеспечении в РФ"', 'пунктом 4 статьи 24 Федерального закона от 15.12.2001 № 166-ФЗ "О государственном пенсионном обеспечении в РФ"'), ('статьи 2 Федерального закона от 27.11.2001 № 155-ФЗ "О дополнительном социальном обеспечении членов летных экипажей воздушных судов гражданской авиации"', 'статьи 2 Федерального закона от 27.11.2001 № 155-ФЗ "О дополнительном социальном обеспечении членов летных экипажей воздушных судов гражданской авиации"'), ('части 4.1 статьи 4 Федерального закона от 10.05.2010 № 84-ФЗ "О дополнительном социальном обеспечении отдельных категорий работников организаций угольной промышленности"', 'части 4.1 статьи 4 Федерального закона от 10.05.2010 № 84-ФЗ "О дополнительном социальном обеспечении отдельных категорий работников организаций угольной промышленности"'), ('постановления Правительства РФ от 07.06.2002 № 390', 'постановления Правительства РФ от 07.06.2002 № 390'), ('постановления Правительства РФ от 04.06.2007 N 343', 'постановления Правительства РФ от 04.06.2007 N 343'), ('постановление Правительства РФ от 02.05.2013 N 397', 'постановление Правительства РФ от 02.05.2013 N 397')], max_length=500, verbose_name='Основание приостановления')),
                ('law', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='decision.article_cl', verbose_name='Статья закона')),
            ],
        ),
    ]
